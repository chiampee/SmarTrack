name: Deploy Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Add SPA fallback (404.html)
        run: |
          cp dist/index.html dist/404.html || true

      - name: Ensure GitHub Pages site (REST fallback)
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            try {
              await github.request('GET /repos/{owner}/{repo}/pages', { owner, repo });
              core.info('Pages site already exists');
            } catch (e) {
              if (e.status === 404) {
                core.info('Pages site not found. Creating with build_type=workflow...');
                try {
                  await github.request('POST /repos/{owner}/{repo}/pages', {
                    owner,
                    repo,
                    build_type: 'workflow'
                  });
                  core.info('Pages site created');
                } catch (err) {
                  core.warning(`Create Pages site via REST failed: ${err.status} ${err.message}`);
                }
              } else {
                core.warning(`Get Pages site failed: ${e.status} ${e.message}`);
              }
            }

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4


